// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.15.0
// source: queries.sql

package models

import (
	"context"
	"database/sql"
)

const getPartner = `-- name: GetPartner :one
SELECT id, servicename, latitude, longitude, radius FROM partners
WHERE id = $1 LIMIT 1
`

func (q *Queries) GetPartner(ctx context.Context, id sql.NullInt64) (Partner, error) {
	row := q.db.QueryRowContext(ctx, getPartner, id)
	var i Partner
	err := row.Scan(
		&i.ID,
		&i.Servicename,
		&i.Latitude,
		&i.Longitude,
		&i.Radius,
	)
	return i, err
}

const listPartners = `-- name: ListPartners :many
SELECT id, servicename, latitude, longitude, radius FROM partners
`

func (q *Queries) ListPartners(ctx context.Context) ([]Partner, error) {
	rows, err := q.db.QueryContext(ctx, listPartners)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Partner
	for rows.Next() {
		var i Partner
		if err := rows.Scan(
			&i.ID,
			&i.Servicename,
			&i.Latitude,
			&i.Longitude,
			&i.Radius,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
